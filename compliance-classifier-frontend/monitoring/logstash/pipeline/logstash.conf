input {
  beats {
    port => 5044
  }
  
  tcp {
    port => 5000
    codec => json
  }
  
  http {
    port => 8080
    codec => json
  }
}

filter {
  if [container][name] =~ /^compliance-classifier-frontend.*/ {
    mutate {
      add_field => { "[@metadata][app]" => "frontend" }
    }
    
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
  }
  
  else if [container][name] =~ /^compliance-classifier-api.*/ {
    mutate {
      add_field => { "[@metadata][app]" => "api" }
    }
    
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{LOGLEVEL:level}\] %{GREEDYDATA:message}" }
    }
  }
  
  if [level] == "ERROR" or [level] == "FATAL" {
    mutate {
      add_tag => ["error"]
    }
  }
  
  date {
    match => [ "timestamp", "ISO8601" ]
    target => "@timestamp"
    remove_field => [ "timestamp" ]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    user => "${ELASTICSEARCH_USER}"
    password => "${ELASTICSEARCH_PASSWORD}"
    index => "%{[@metadata][app]}-%{+YYYY.MM.dd}"
  }
  
  if "error" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "${ELASTICSEARCH_USER}"
      password => "${ELASTICSEARCH_PASSWORD}"
      index => "errors-%{+YYYY.MM.dd}"
    }
  }
}