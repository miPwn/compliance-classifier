version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: compliance-classifier-frontend
    ports:
      - "80:80"
    restart: unless-stopped
    networks:
      - compliance-network
    depends_on:
      - api-service
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  api-service:
    image: mcr.microsoft.com/dotnet/aspnet:8.0
    container_name: compliance-classifier-api
    volumes:
      - ../ComplianceClassifier.API/bin/Release/net8.0/publish:/app
    working_dir: /app
    command: dotnet ComplianceClassifier.API.dll --urls="http://0.0.0.0:5000"
    ports:
      - "5000:5000"
    restart: unless-stopped
    networks:
      - compliance-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=ComplianceClassifier;User=sa;Password=YourStrongPassword!;TrustServerCertificate=True;
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: compliance-classifier-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrongPassword!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - compliance-db-data:/var/opt/mssql
    restart: unless-stopped
    networks:
      - compliance-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrongPassword! -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  compliance-network:
    driver: bridge

volumes:
  compliance-db-data: